; https://github.com/dougireton/dotfiles/blob/master/tag-git/gitconfig
[credential]
  helper          = osxkeychain
[core]
  editor          = vim
  ; https://coderwall.com/p/nl-bdg/more-readable-git-word-diff-on-osx
  pager           = `brew --prefix git`/share/git-core/contrib/diff-highlight/diff-highlight | less
  whitespace = trailing-space,space-before-tab,indent-with-non-tab
  autocrlf = input
[user]
  name            = Nick Silkey
  email           = nsilkey@digitalocean.com
  signingkey      = 881EC6C3B451115C
[github]
  user            = filler
[push]
  default         = current
[pull]
  default         = current
  rebase          = true
[diff]
  tool            = vimdiff
  mnemonicprefix  = true
  renames         = copies
[difftool]
  prompt = false
[apply]
  ; Detect whitespace errors when applying a patch
  whitespace      = fix
[alias]
  am              = !git commit --amend
  br              = branch
  bb              = checkout silkey/bump_books
  co              = checkout
  ci              = commit --verbose
  ciaa            = commit -a --amend
  cln             = clean -n
  cl              = clean -f -d
  cm              = checkout master
  di              = diff
  f               = fetch -v --tags
  graph           = "!f() { git log --oneline --abbrev-commit --graph --decorate; }; f"
  hist            = log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr - %an)%Creset' --abbrev-commit --date=relative
  p               = pull --rebase
  po              = push origin
  pof             = push origin --force
  pot             = push origin --tags
  pr              = "!f() { git fetch origin pull/$1/head:pr-$1 && git checkout pr-$1; }; f"
  recent          = "!r() { \
                    git for-each-ref --color=always --sort=-committerdate refs/heads \
                    --format='%(HEAD)%(color:yellow)%(refname:short)|%(color:bold green)%(committerdate:relative)|%(color:blue)%(subject)|%(color:magenta)%(authorname)%(color:reset)' \
                    | column -ts'|' \
                    | cut -c -$(tput cols) \
                     ;}; r"
  rom             = rebase origin/master
  rum             = rebase upstream/master
  rc              = rebase --continue
  st              = status -sb
  tagsha          = rev-parse --short HEAD
  top             = !git log --format=format:%an | sort | uniq -c | sort -r | head -n 20
  undo            = !git reset HEAD~1 --mixed
  unreleased      = "!f() { git fetch --tags && git diff $(git tag | tail -n 1); }; f"
  unstage         = reset HEAD --
  x               = "!f() { gitx; }; f"
[color]
  branch          = auto
  diff            = auto
  interactive     = auto
  status          = auto
  ui              = auto
[color "branch"]
  current         = yellow reverse
  local           = yellow
  remote          = green
[color "diff"]
  meta            = yellow bold
  frag            = magenta bold
  old             = red bold
  new             = green bold
[color "status"]
  added           = yellow
  changed         = green
  untracked       = cyan
[merge]
  ; Include summaries of merged commits in newly created merge commit messages
  log             = true
  tool            = vimdiff
[branch "master"]
  ; Use `origin` as the default remote on the `master` branch in all cases
  remote          = origin
  merge           = refs/heads/master
; URL shorthands
[url "git@github.com:"]
  insteadOf       = "gh:"
  pushInsteadOf   = "github:"
  pushInsteadOf   = "git://github.com/"
[url "git://github.com/"]
  insteadOf       = "github:"
[url "git@gist.github.com:"]
  insteadOf       = "gst:"
  pushInsteadOf   = "gist:"
  pushInsteadOf   = "git://gist.github.com/"
[url "git://gist.github.com/"]
  insteadOf       = "gist:"
[gitreview]
  username = filler
  scheme = https
  port = 443
[url "https://"]
  insteadOf = git://
[hub]
  host = github.internal.digitalocean.com
  protocol = https
[feature]
	manyFiles = true
